# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - "Meta**"
      - "memcheck**"
      - "docs**"
      - "**.git"
      - "**.json"
      - "**.md"
      - "**.R[dD]ata"
      - "**.Rpro*"
      - "**.yml"
      - "!**R-CMD-check.yml"
  pull_request:
    branches:
      - main
      - master
    paths-ignore:
      - "Meta**"
      - "memcheck**"
      - "docs**"
      - "**.git"
      - "**.json"
      - "**.md"
      - "**.R[dD]ata"
      - "**.Rpro*"
      - "**.yml"
      - "!**R-CMD-check.yml"

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-24.04, r: '3.6', rspm: "https://packagemanager.posit.co/cran/2020-03-30"}
          - {os: ubuntu-24.04, r: 'release', rspm: "https://packagemanager.posit.co/cran/__linux__/noble/latest"}
          - {os: ubuntu-24.04, r: 'devel', rspm: "https://packagemanager.posit.co/cran/__linux__/noble/latest"}

    env:
      _R_CHECK_CRAN_INCOMING_: true # Seemingly not set by --as-cran
      _R_CHECK_FORCE_SUGGESTS_: false # CRAN settings
      R_COMPILE_AND_INSTALL_PACKAGES: 'never'
      _R_CHECK_THINGS_IN_CHECK_DIR_: false
      R_REMOTES_STANDALONE: true
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: 'true'

      - name: Temporarily bump package version
        run: |
          old_version=$(grep "Version:" DESCRIPTION | awk '{print $2}')
          if [[ $(echo "$old_version" | tr -cd '.' | wc -c) -eq 2 ]]; then
            new_version="${old_version}.9999"
            if [[ "$RUNNER_OS" == "macOS" ]]; then
              sed -i "" "s/Version: .*/Version: ${new_version}/" DESCRIPTION
            else
              sed -i "s/Version: .*/Version: ${new_version}/" DESCRIPTION
            fi
          fi
          echo "Current package version is now: $(grep "Version:" DESCRIPTION | awk '{print $2}')"
        shell: bash

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install apt packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install texlive-latex-base \
            texlive-fonts-recommended
        

      - name: Install system dependencies (R 3.x)
        if: ${{ matrix.config.r == '3.6' || matrix.config.r == '3.5' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libpng-dev \
          libfreetype6-dev \
          libjpeg-dev \
          libxml2-dev \
          libharfbuzz-dev \
          libfribidi-dev

      - name: Install vdiffr dependencies (R 3.x)
        if: matrix.config.r < '4.0'
        run: |
          Rscript -e "install.packages(c('diffobj','glue','htmltools','lifecycle','rlang','testthat','xml2','cpp11', 'rcmdcheck'), repos = 'https://packagemanager.posit.co/cran/2021-08-02')"

      - name: Install vdiffr patched (R 3.x)
        if: matrix.config.r < '4.0'
        run: |
          git clone --branch v1.0.0 https://github.com/r-lib/vdiffr.git vdiffr-src
          sed -i '1i#include <cstdint>' vdiffr-src/src/devSVG.cpp
          R CMD INSTALL --preclean --no-multiarch --with-keep.source vdiffr-src
          rm -rf vdiffr-src

      - name: Set up R dependencies (R 3.x)
        if: matrix.config.r < '4.0'
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          dependencies: '"hard"'
          extra-packages:
            testthat@3.0.4
            waldo@0.4.0
            xfun@0.28
            knitr@1.33
            rmarkdown@2.10
            sp@1.4-5

      - name: Set up R dependencies (Windows)
        if: runner.os == 'Windows'
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          needs: |
            check
            coverage

      - name: Set up R dependencies (Non-Windows)
        if: ${{runner.os != 'Windows' && matrix.config.r >= '4.0' }}
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          needs: |
            check

      - name: Check package
        uses: r-lib/actions/check-r-package@v2

      - name: Code coverage
        if: runner.os == 'Windows'
        run: |
          covr::codecov()
        shell: Rscript {0}

      - name: Notify on failure
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: 93,
              body: 'Scheduled workflow has failed: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            });
